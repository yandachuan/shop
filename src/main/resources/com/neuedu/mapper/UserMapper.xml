<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.entity.User" >
    <id column="userId" property="userid" jdbcType="BIGINT" />
    <result column="loginPhone" property="loginphone" jdbcType="INTEGER" />
    <result column="eMail" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickName" property="nickname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="userHeadPortrait" property="userheadportrait" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, loginPhone, eMail, password, nickName, gender, status, userHeadPortrait, 
    createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where userId = #{userid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.neuedu.entity.User" >
    insert into user (userId, loginPhone, eMail, 
      password, nickName, gender, 
      status, userHeadPortrait, createTime
      )
    values (#{userid,jdbcType=BIGINT}, #{loginphone,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{userheadportrait,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="loginphone != null" >
        loginPhone,
      </if>
      <if test="email != null" >
        eMail,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickName,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userheadportrait != null" >
        userHeadPortrait,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="loginphone != null" >
        #{loginphone,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userheadportrait != null" >
        #{userheadportrait,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.entity.User" >
    update user
    <set >
      <if test="loginphone != null" >
        loginPhone = #{loginphone,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        eMail = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userheadportrait != null" >
        userHeadPortrait = #{userheadportrait,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userId = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.entity.User" >
    update user
    set loginPhone = #{loginphone,jdbcType=INTEGER},
      eMail = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      userHeadPortrait = #{userheadportrait,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where userId = #{userid,jdbcType=BIGINT}
  </update>

  <select id="findUserByUserId" resultType="com.neuedu.entity.User">
    select * from user where userId = #{userid} and password = #{password}
  </select>

  <select id="findUserByEmail" resultType="com.neuedu.entity.User">
    select * from user where eMail = #{email} and password = #{password}
  </select>

  <select id="findUserByLoginphone" resultType="com.neuedu.entity.User">
    select * from user where loginPhone = #{loginphone} and password = #{password}
  </select>

  <select id="findUserByphone" resultType="int">
    select count(*) from user where loginPhone = #{loginphone}
  </select>
</mapper>